class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        unordered_map<int, int> prefixSumMap;  
        prefixSumMap[0] = 1;  
        
        int currentSum = 0;
        int count = 0;
        
        for (int i = 0; i < nums.size(); i++) {
            currentSum += nums[i];  
            
            if (prefixSumMap.find(currentSum - k) != prefixSumMap.end()) {
                count += prefixSumMap[currentSum - k];
            }
            
            prefixSumMap[currentSum]++;
        }
        
        return count;
    }
};
